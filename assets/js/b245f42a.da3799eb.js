"use strict";(self.webpackChunkzeno_docs=self.webpackChunkzeno_docs||[]).push([[250],{1561:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>l});var n=t(5893),s=t(1151),c=t(9286);const d={},r="View Specification",o={id:"views/spec/spec",title:"View Specification",description:"With the View Specifications, you can create a custom Instance View for your specific data.",source:"@site/docs/views/spec/spec.mdx",sourceDirName:"views/spec",slug:"/views/spec/",permalink:"/docs/views/spec/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Standard Views",permalink:"/docs/views/existing"},next:{title:"View Elements",permalink:"/docs/views/spec/other"}},a={},l=[{value:"View Specification",id:"view-specification-1",level:2},{value:"Properties",id:"properties",level:4}];function h(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"view-specification",children:"View Specification"}),"\n",(0,n.jsxs)(i.p,{children:["With the View Specifications, you can create a custom Instance View for your specific data.\nUnder the hood, Zeno converts all the ",(0,n.jsx)(i.a,{href:"/docs/views/existing",children:"Standard Views"})," into these View Specifications.\nFor example, the ",(0,n.jsx)(i.strong,{children:"image-classification"})," view turns into:"]}),"\n",(0,n.jsx)(c.Z,{language:"json",children:'{\n  "data": {\n    "type": "image"\n  },\n  "label": {\n    "type": "text"\n  },\n  "output": {\n    "type": "text"\n  }\n}\n'}),"\n",(0,n.jsxs)(i.p,{children:["Where ",(0,n.jsx)(i.code,{children:"type"})," is one of the ",(0,n.jsx)(i.a,{href:"/docs/views/spec/other",children:"View Element"})," types. You can explore all the available preconfigured view specifications and experiment with your own specification using the ",(0,n.jsx)(i.a,{href:"https://hub.zenoml.com/playground",children:"Instance View Playground"}),".\nIf you want to learn how to write your own view specification, the following should help you get started."]}),"\n",(0,n.jsx)(i.admonition,{type:"tip",children:(0,n.jsxs)(i.p,{children:["Check out the ",(0,n.jsx)(i.a,{href:"https://hub.zenoml.com/playground",children:"Instance View Playground"})," to test out existing views and prototype new custom views."]})}),"\n",(0,n.jsx)(i.h2,{id:"view-specification-1",children:"View Specification"}),"\n",(0,n.jsxs)(i.p,{children:["The top level of the View Specification contains keys for the three main inputs, ",(0,n.jsx)(i.code,{children:"data"}),", ",(0,n.jsx)(i.code,{children:"label"}),", and ",(0,n.jsx)(i.code,{children:"output"}),", and an optional ",(0,n.jsx)(i.code,{children:"displayType"}),":"]}),"\n",(0,n.jsx)(c.Z,{language:"json",title:"View Specification",children:'{\n  "data": ...,\n  "label": ...,\n  "output": ...,\n  "size": ...,\n  "displayType": ...\n}\n'}),"\n",(0,n.jsx)(i.h4,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Property"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"data"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/views/spec/other",children:"ViewElement"})}),(0,n.jsx)(i.td,{children:"How to render data entries."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"label"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/views/spec/other",children:"ViewElement"})}),(0,n.jsx)(i.td,{children:"How to render label entries."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"output"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"/docs/views/spec/other",children:"ViewElement"})}),(0,n.jsx)(i.td,{children:"How to render output entries."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"size"}),(0,n.jsx)(i.td,{children:'"medium" | "large"'}),(0,n.jsx)(i.td,{children:"Width of the instance."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"displayType"}),(0,n.jsx)(i.td,{children:"Optional[String]"}),(0,n.jsxs)(i.td,{children:["How to display data, label, and output entries. The default view is a vertical list and each of ",(0,n.jsx)(i.code,{children:"data"}),", ",(0,n.jsx)(i.code,{children:"label"})," and ",(0,n.jsx)(i.code,{children:"output"})," must be ",(0,n.jsx)(i.a,{href:"/docs/views/spec/other",children:"ViewElement"}),"s. If set to ",(0,n.jsx)(i.code,{children:'"table"'}),", ",(0,n.jsx)(i.code,{children:"data"}),", ",(0,n.jsx)(i.code,{children:"label"}),", and ",(0,n.jsx)(i.code,{children:"output"})," must be ",(0,n.jsx)(i.a,{href:"/docs/views/spec/other#separated-values",children:"Separated Values"}),"."]})]})]})]})]})}function p(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);