"use strict";(self.webpackChunkzeno_docs=self.webpackChunkzeno_docs||[]).push([[206],{9325:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=t(5893),o=t(1151);t(9286);const i={sidebar_position:1},s="Getting Started",r={id:"intro",title:"Getting Started",description:"Zeno is an interactive AI evaluation platform for exploring, discovering and reporting the performance of your models.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Using Zeno",permalink:"/docs/using-zeno"}},c={},d=[{value:"Creating a Project",id:"creating-a-project",level:2},{value:"Complete Example",id:"complete-example",level:4},{value:"Quickstart with Zeno Build",id:"quickstart-with-zeno-build",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsxs)(n.p,{children:["Zeno is an ",(0,a.jsx)(n.strong,{children:"interactive AI evaluation platform"})," for exploring, discovering and reporting the performance of your models.\nUse it for any task and data type with Zeno's ",(0,a.jsx)(n.a,{href:"/docs/views/",children:"modular views"})," for everything from object detection to audio transcription and chatbot conversations.\nZeno helps you move beyond aggregate metrics and spot-checking model outputs to develop a deep and quantitative understanding of how your model behaves."]}),"\n",(0,a.jsxs)(n.p,{children:["To get an idea of Zeno's features, you can explore public projects and reports in ",(0,a.jsx)(n.a,{href:"https://hub.zenoml.com",children:"Zeno Hub"}),".\nFor example, take a look at a ",(0,a.jsx)(n.a,{href:"https://hub.zenoml.com/report/cabreraalex/GPT%20MT%20Benchmark%20Report",children:"report evaluating how well LLMs like GPT-4 do on language translation"}),", along with the ",(0,a.jsx)(n.a,{href:"https://hub.zenoml.com/project/cabreraalex/GPT%20MT%20Benchmark/explore",children:"underlying data used to create the report."}),"."]}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["Head over to ",(0,a.jsx)(n.a,{href:"https://hub.zenoml.com",children:"Zeno Hub"})," to explore public Zeno projects and reports."]}),(0,a.jsxs)(n.p,{children:["Check out the ",(0,a.jsx)(n.a,{href:"/docs/using-zeno/",children:"Using Zeno"})," docs for more information on how to use the Zeno interface."]})]}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-project",children:"Creating a Project"}),"\n",(0,a.jsxs)(n.p,{children:["To create your own projects and reports, first create an account on ",(0,a.jsx)(n.a,{href:"https://hub.zenoml.com/signup",children:"Zeno Hub"}),".\nAfter logging in to Zeno Hub, generate your API key by clicking on your profile at the top right to navigate to your ",(0,a.jsx)(n.a,{href:"https://hub.zenoml.com/account",children:"account page"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Next, install the ",(0,a.jsx)(n.code,{children:"zeno-client"})," Python package, which is used to upload new datasets and AI system outputs:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pip install zeno-client\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can now create a client with out API key, and use it to create a project and upload data. The client API works with Pandas DataFrames, so we can create a sample DataFrame looking at text sentiment classification:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from zeno_client import ZenoClient\nimport pandas as pd\n\nclient = ZenoClient("YOUR API KEY HERE")\n\ndf = pd.DataFrame(\n    {\n        "text": [\n            "I love this movie!",\n            "I hate this movie!",\n            "This movie is ok.",\n        ],\n        "label": ["positive", "negative", "neutral"],\n    }\n)\n\n# Explicitly save the index as a column to upload.\ndf["id"] = df.index\n\n# Add any additional columns you want to do analysis across.\ndf["input length"] = df["text"].str.len()\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Let's create a project for this task. ",(0,a.jsx)(n.strong,{children:"Projects"})," in Zeno are a base dataset and any number of AI system outputs, and are used to evaluate and compare model performance. Here we create a project and upload our base dataset."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"view"})," option can take a ",(0,a.jsx)(n.a,{href:"/docs/views/existing",children:(0,a.jsx)(n.code,{children:"string"})})," for one of the standard views or a ",(0,a.jsx)(n.a,{href:"/docs/views/spec/",children:(0,a.jsx)(n.code,{children:"dict"})})," with a custom view specification."]}),(0,a.jsxs)(n.p,{children:["If you just want to look at tabular metadata, you can omit ",(0,a.jsx)(n.code,{children:"view"})," from ",(0,a.jsx)(n.code,{children:"create_project"})," and ",(0,a.jsx)(n.code,{children:"data_column"})," from ",(0,a.jsx)(n.code,{children:"upload_dataset"}),"."]})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from zeno_client import ZenoClient, ZenoMetric\n\n...\n\nproject = client.create_project(\n    name="Sentiment Classification",\n    view="text-classification",\n    metrics=[\n        ZenoMetric(name="accuracy", type="mean", columns=["correct"]),\n    ]\n)\n\nproject.upload_dataset(df, id_column="id", data_column=\'text\', label_column="label")\n'})}),"\n",(0,a.jsxs)(n.p,{children:['We named our project "Sentiment Classification" and specified that it is a text classification task.\nCheck out all supported data types and tasks ',(0,a.jsx)(n.a,{href:"https://zenoml.com/docs/views/",children:"here"}),".\nWe also added an initial accuracy metric which takes the mean of the ",(0,a.jsx)(n.code,{children:"correct"})," column, which will be present in the system outputs we upload later."]}),"\n",(0,a.jsx)(n.p,{children:"Next, we can upload some system outputs to evaluate. Here we'll upload some fake predictions from a model:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'\n...\n\ndf_system = pd.DataFrame(\n    {\n        "output": ["positive", "negative", "negative"],\n    }\n)\n\n# Create an id column to match the base dataset.\ndf_system["id"] = df_system.index\n\n# Measure accuracy for each instance, which is averaged by the ZenoMetric above.\ndf_system["correct"] = (df_system["output"] == df["label"]).astype(int)\n\nproj.upload_system(df_system, name="System A", id_column="id", output_column="output")\n'})}),"\n",(0,a.jsx)(n.p,{children:"You can now navigate to the project URL in Zeno Hub to see the uploaded data and metrics and start exploring your AI system's performance!"}),"\n",(0,a.jsx)(n.h4,{id:"complete-example",children:"Complete Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from zeno_client import ZenoClient, ZenoMetric\nimport pandas as pd\n\nclient = ZenoClient("YOUR API KEY HERE")\n\ndf = pd.DataFrame(\n    {\n        "text": [\n            "I love this movie!",\n            "I hate this movie!",\n            "This movie is ok.",\n        ],\n        "label": ["positive", "negative", "neutral"],\n    }\n)\n\n# Explicitly save the index as a column to upload.\ndf["id"] = df.index\n\n# Add any additional columns you want to do analysis across.\ndf["input length"] = df["text"].str.len()\n\nproject = client.create_project(\n    name="Sentiment Classification",\n    view="text-classification",\n    metrics=[\n        ZenoMetric(name="accuracy", type="mean", columns=["correct"]),\n    ]\n)\n\nproject.upload_dataset(df, id_column="id", data_column=\'text\', label_column="label")\n\ndf_system = pd.DataFrame(\n    {\n        "output": ["positive", "negative", "negative"],\n    }\n)\n\n# Create an id column to match the base dataset.\ndf_system["id"] = df_system.index\n\n# Measure accuracy for each instance, which is averaged by the ZenoMetric above.\ndf_system["correct"] = (df_system["output"] == df["label"]).astype(int)\n\nproject.upload_system(df_system, name="System A", id_column="id", output_column="output")\n'})}),"\n",(0,a.jsx)(n.h2,{id:"quickstart-with-zeno-build",children:"Quickstart with Zeno Build"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/zeno-ml/zeno-build",children:"Zeno Build"})," is a Python library that makes it easy to set up Zeno projects for common AI and ML tasks. Check out some common Zeno Build notebooks:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zeno-ml/zeno-build/tree/main/examples/eleuther_harness",children:"EleutherAI LM Evaluation Harness"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zeno-ml/zeno-build/tree/main/examples/open_llm_leaderboard",children:"\ud83e\udd17 OpenLLM Leaderboard"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/zeno-ml/zeno-build/tree/main/examples/transcription",children:"Audio Transcription Bias"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);