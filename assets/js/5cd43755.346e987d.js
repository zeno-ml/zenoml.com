"use strict";(self.webpackChunkzeno_docs=self.webpackChunkzeno_docs||[]).push([[517],{5120:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>w,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=n(7462),o=(n(7294),n(3905));const a={},s="Instance Views",r={unversionedId:"views/views",id:"views/views",title:"Instance Views",description:"Instance Views let you specify how Zeno should render your data.",source:"@site/docs/views/views.mdx",sourceDirName:"views",slug:"/views/",permalink:"/docs/views/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Client API",permalink:"/docs/python-client"},next:{title:"Standard Views",permalink:"/docs/views/existing"}},c={},l=[],p={toc:l},d="wrapper";function w(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"instance-views"},"Instance Views"),(0,o.kt)("p",null,"Instance Views let you specify how Zeno should render your data.\nThere are two ways to define instance views:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Standard Views")," - Use the string identifier for one of the ",(0,o.kt)("a",{parentName:"li",href:"/docs/views/existing"},"Standard Views"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Custom Views")," - Use the ",(0,o.kt)("a",{parentName:"li",href:"/docs/views/spec"},"View Specification")," to create your own view.")),(0,o.kt)("p",null,"You can either pass in a standard view string or a custom view ",(0,o.kt)("inlineCode",{parentName:"p"},"dict")," object to the view option of the ",(0,o.kt)("inlineCode",{parentName:"p"},"create_project")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from zeno-client import ZenoClient\nclient = ZenoClient("/** API KEY **/")\n\n# Standard View\nproject = client.create_project(\n    name="My Project",\n    view="text-classification"\n)\n\n# Custom View\nproject = client.create_project(\n    name="My Project",\n    view={\n        "data": {\n            "type": "image"\n        },\n        "label": {\n            "type": "text"\n        },\n        "output": {\n            "type": "text"\n        }\n    }\n)\n')))}w.isMDXComponent=!0}}]);