"use strict";(self.webpackChunkzeno_docs=self.webpackChunkzeno_docs||[]).push([[539],{7094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const o={sidebar_position:2},i="Python Client API",r={unversionedId:"python-client",id:"python-client",title:"Python Client API",description:"The Python client is used to create projects and upload data.",source:"@site/docs/python-client.mdx",sourceDirName:".",slug:"/python-client",permalink:"/docs/python-client",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/intro"},next:{title:"Using Zeno",permalink:"/docs/using-zeno"}},p={},s=[{value:"ZenoMetric Objects",id:"zenometric-objects",level:2},{value:"ZenoProject Objects",id:"zenoproject-objects",level:2},{value:"__init__",id:"__init__",level:3},{value:"upload_dataset",id:"upload_dataset",level:3},{value:"upload_system",id:"upload_system",level:3},{value:"ZenoClient Objects",id:"zenoclient-objects",level:2},{value:"__init__",id:"__init__-1",level:3},{value:"create_project",id:"create_project",level:3},{value:"get_project",id:"get_project",level:3}],c={toc:s},m="wrapper";function u(e){let{components:t,...n}=e;return(0,l.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"python-client-api"},"Python Client API"),(0,l.kt)("p",null,"The Python client is used to create projects and upload data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pip install zeno-client\n")),(0,l.kt)("p",null,"Please see ",(0,l.kt)("a",{parentName:"p",href:"/docs/intro#creating-a-project"},"Creating a Project")," to learn how to use the client."),(0,l.kt)("a",{id:"client.ZenoMetric"}),(0,l.kt)("h2",{id:"zenometric-objects"},"ZenoMetric Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class ZenoMetric(BaseModel)\n")),(0,l.kt)("p",null,"A metric to calculate for a Zeno project."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id")," ",(0,l.kt)("em",{parentName:"li"},"int")," - The ID of the metric. -1 if not set."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The name of the metric."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"type")," ",(0,l.kt)("em",{parentName:"li"},"str"),' - The type of metric to calculate. Currently only "mean".'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"columns")," ",(0,l.kt)("em",{parentName:"li"},"list","[str]")," - The columns to calculate the metric on.\nEmpty list if not set.")),(0,l.kt)("a",{id:"client.ZenoProject"}),(0,l.kt)("h2",{id:"zenoproject-objects"},"ZenoProject Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class ZenoProject()\n")),(0,l.kt)("p",null,"Provides data upload functionality for a Zeno project."),(0,l.kt)("p",null,"Should NOT be initialized directly, but rather through the ZenoClient."),(0,l.kt)("a",{id:"client.ZenoProject.__init__"}),(0,l.kt)("h3",{id:"__init__"},"_","_","init","_","_"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(api_key: str, project_uuid: str, endpoint: str = DEFAULT_BACKEND)\n")),(0,l.kt)("p",null,"Initialize the Project object for API upload calls."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"api_key")," ",(0,l.kt)("em",{parentName:"li"},"str")," - the API key to authenticate uploads with."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"project_uuid")," ",(0,l.kt)("em",{parentName:"li"},"str")," - the ID of the project to add data to."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"endpoint")," ",(0,l.kt)("em",{parentName:"li"},"str, optional")," - the base URL of the Zeno backend.")),(0,l.kt)("a",{id:"client.ZenoProject.upload_dataset"}),(0,l.kt)("h3",{id:"upload_dataset"},"upload_dataset"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def upload_dataset(df: pd.DataFrame,\n                   *,\n                   id_column: str,\n                   data_column: str,\n                   label_column: Optional[str] = None)\n")),(0,l.kt)("p",null,"Upload a dataset to a Zeno project."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"df")," ",(0,l.kt)("em",{parentName:"li"},"pd.DataFrame")," - The dataset to upload as a Pandas DataFrame."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id_column")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Column name containing unique instance IDs."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data_column")," ",(0,l.kt)("em",{parentName:"li"},"str")," - Column containing the\ninstance data. This can be raw data for data types such as\ntext, or URLs for large media data such as images and videos."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"label_column")," ",(0,l.kt)("em",{parentName:"li"},"str | None, optional")," - Column containing the\ninstance labels. Defaults to None.")),(0,l.kt)("a",{id:"client.ZenoProject.upload_system"}),(0,l.kt)("h3",{id:"upload_system"},"upload_system"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def upload_system(df: pd.DataFrame, *, name: str, id_column: str,\n                  output_column: str)\n")),(0,l.kt)("p",null,"Upload a system to a Zeno project."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"df")," ",(0,l.kt)("em",{parentName:"li"},"pd.DataFrame")," - The dataset to upload."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The name of the system to upload."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id_column")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The name of the column containing the instance IDs."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"output_column")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The name of the column containing the system output.")),(0,l.kt)("a",{id:"client.ZenoClient"}),(0,l.kt)("h2",{id:"zenoclient-objects"},"ZenoClient Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class ZenoClient()\n")),(0,l.kt)("p",null,"Client class for data upload functionality to Zeno."),(0,l.kt)("a",{id:"client.ZenoClient.__init__"}),(0,l.kt)("h3",{id:"__init__-1"},"_","_","init","_","_"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(api_key: str, *, endpoint: str = DEFAULT_BACKEND) -> None\n")),(0,l.kt)("p",null,"Initialize the ZenoClient object for API upload calls."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"api_key")," ",(0,l.kt)("em",{parentName:"li"},"str")," - the API key to authenticate uploads with."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"endpoint")," ",(0,l.kt)("em",{parentName:"li"},"str, optional")," - the base URL of the Zeno backend.\nDefaults to DEFAULT_BACKEND.")),(0,l.kt)("a",{id:"client.ZenoClient.create_project"}),(0,l.kt)("h3",{id:"create_project"},"create_project"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def create_project(*,\n                   name: str,\n                   view: str,\n                   metrics: List[ZenoMetric] = [],\n                   data_url: str = "",\n                   calculate_histogram_metrics: bool = True,\n                   samples_per_page: int = 10,\n                   public: bool = False,\n                   description: str = "") -> ZenoProject\n')),(0,l.kt)("p",null,"Creates an empty project in Zeno's backend."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The name of the project to be created. The project will be\ncreated under the current user, e.g. username/name."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"project")," - str,"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"view")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The view to use for the project."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"metrics")," ",(0,l.kt)("em",{parentName:"li"},"list","[ZenoMetric]",", optional")," - The metrics to calculate for the\nproject. Defaults to []."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data_url")," ",(0,l.kt)("em",{parentName:"li"},"str, optional"),' - The base URL to load datapoints from.\nDefaults to "".'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"calculate_histogram_metrics")," ",(0,l.kt)("em",{parentName:"li"},"bool, optional")," - Whether to calculate histogram\nmetrics. Defaults to True."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"samples_per_page")," ",(0,l.kt)("em",{parentName:"li"},"int, optional")," - The number of samples to show per page.\nDefaults to 10."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"public")," ",(0,l.kt)("em",{parentName:"li"},"bool, optional")," - Whether the project is public. Defaults to False."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"description")," ",(0,l.kt)("em",{parentName:"li"},"str, optional"),' - The description of the project. Defaults to "".')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"ZenoProject | None: The created project object or None if the project could\nnot be created."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Raises"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ValidationError")," - If the config does not match the ProjectConfig schema."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"APIError")," - If the project could not be created.")),(0,l.kt)("a",{id:"client.ZenoClient.get_project"}),(0,l.kt)("h3",{id:"get_project"},"get_project"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def get_project(project_name: str) -> ZenoProject\n")),(0,l.kt)("p",null,"Get a project object by its name. Names are split into owner/project_name."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"project_name")," ",(0,l.kt)("em",{parentName:"li"},"str")," - The owner/project_name of the project to get.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"Project | None: The project object or None if the project could not be\nfound."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Raises"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"APIError")," - If the project could not be found.")))}u.isMDXComponent=!0}}]);