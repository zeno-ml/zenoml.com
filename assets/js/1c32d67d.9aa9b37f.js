"use strict";(self.webpackChunkzeno_docs=self.webpackChunkzeno_docs||[]).push([[201],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:2},i="Quickstart",l={unversionedId:"quickstart/quickstart",id:"quickstart/quickstart",title:"Quickstart",description:"Install the Zeno Python package.",source:"@site/docs/quickstart/quickstart.md",sourceDirName:"quickstart",slug:"/quickstart/",permalink:"/docs/quickstart/",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Using Zeno",permalink:"/docs/quickstart/using_zeno"}},c={},u=[{value:"Getting Started with Zeno Build",id:"getting-started-with-zeno-build",level:2},{value:"Running Zeno",id:"running-zeno",level:2},{value:"Command Line",id:"command-line",level:3},{value:"Jupyter Notebooks",id:"jupyter-notebooks",level:3},{value:"Adding Models and Metrics",id:"adding-models-and-metrics",level:2}],s={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart"},"Quickstart"),(0,o.kt)("p",null,"Install the Zeno Python package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install zenoml\n")),(0,o.kt)("h2",{id:"getting-started-with-zeno-build"},"Getting Started with Zeno Build"),(0,o.kt)("p",null,"The best way to get started with Zeno is with ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/zeno-ml/zeno-build"},"Zeno Build"),", a Python library that makes it easy to set up Zeno projects for common AI and ML tasks."),(0,o.kt)("p",null,"Follow the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/zeno-ml/zeno-build/tree/main/docs/tutorial"},"Zeno Build Tutorial")," to learn the basic Zeno concepts on an example LLM task."),(0,o.kt)("p",null,"You can follow the ",(0,o.kt)("a",{parentName:"p",href:"./using_zeno"},"Using Zeno")," tutorial to learn more about what you can accomplish with Zeno!"),(0,o.kt)("h2",{id:"running-zeno"},"Running Zeno"),(0,o.kt)("h3",{id:"command-line"},"Command Line"),(0,o.kt)("p",null,"Zeno includes a command line helper to set up a new project which guides you through creating the TOML configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"zeno init\n")),(0,o.kt)("p",null,"You can then run Zeno with"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"zeno config.toml\n")),(0,o.kt)("h3",{id:"jupyter-notebooks"},"Jupyter Notebooks"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Import zeno with ",(0,o.kt)("inlineCode",{parentName:"p"},"import zeno from zeno"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create a Pandas DataFrame with your metadata.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run zeno with a dict of options:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'zeno({\n    "view": "image-classification",\n    "metadata": my_dataframe,\n    "data_path": "path/to/data",\n    "data_column": "image_path",\n})\n')),(0,o.kt)("h2",{id:"adding-models-and-metrics"},"Adding Models and Metrics"),(0,o.kt)("p",null,"To add model predictions and metrics, you can write functions with the ",(0,o.kt)("a",{parentName:"p",href:"/docs/api"},"Python API")," wrappers."),(0,o.kt)("p",null,"If using the command line, create a folder with a Python file including these functions and add the folder as an option to the TOML file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'functions = "path/to/functions"\n')),(0,o.kt)("p",null,"In Jupyter Notebooks, you can pass a list of functions to the ",(0,o.kt)("inlineCode",{parentName:"p"},"functions")," option:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'zeno({\n    "functions": [model_function, accuracy_function]\n})\n')))}d.isMDXComponent=!0}}]);